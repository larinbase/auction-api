/*
 * This file is generated by jOOQ.
 */
package com.technokratos.model.jooq.schema.tables.records;


import com.technokratos.model.jooq.schema.tables.Lot;
import com.technokratos.model.jooq.schema.tables.pojos.LotEntity;

import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Лот
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LotRecord extends UpdatableRecordImpl<LotRecord> implements Record6<UUID, String, String, String, String, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.lot.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.lot.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.lot.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.lot.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.lot.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.lot.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.lot.artikul</code>.
     */
    public void setArtikul(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.lot.artikul</code>.
     */
    public String getArtikul() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.lot.status</code>.
     */
    public void setStatus(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.lot.status</code>.
     */
    public String getStatus() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.lot.auction_id</code>.
     */
    public void setAuctionId(UUID value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.lot.auction_id</code>.
     */
    public UUID getAuctionId() {
        return (UUID) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<UUID, String, String, String, String, UUID> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<UUID, String, String, String, String, UUID> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Lot.LOT_ENTITY.ID;
    }

    @Override
    public Field<String> field2() {
        return Lot.LOT_ENTITY.NAME;
    }

    @Override
    public Field<String> field3() {
        return Lot.LOT_ENTITY.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return Lot.LOT_ENTITY.ARTIKUL;
    }

    @Override
    public Field<String> field5() {
        return Lot.LOT_ENTITY.STATUS;
    }

    @Override
    public Field<UUID> field6() {
        return Lot.LOT_ENTITY.AUCTION_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getArtikul();
    }

    @Override
    public String component5() {
        return getStatus();
    }

    @Override
    public UUID component6() {
        return getAuctionId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getArtikul();
    }

    @Override
    public String value5() {
        return getStatus();
    }

    @Override
    public UUID value6() {
        return getAuctionId();
    }

    @Override
    public LotRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public LotRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public LotRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public LotRecord value4(String value) {
        setArtikul(value);
        return this;
    }

    @Override
    public LotRecord value5(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public LotRecord value6(UUID value) {
        setAuctionId(value);
        return this;
    }

    @Override
    public LotRecord values(UUID value1, String value2, String value3, String value4, String value5, UUID value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached LotRecord
     */
    public LotRecord() {
        super(Lot.LOT_ENTITY);
    }

    /**
     * Create a detached, initialised LotRecord
     */
    public LotRecord(UUID id, String name, String description, String artikul, String status, UUID auctionId) {
        super(Lot.LOT_ENTITY);

        setId(id);
        setName(name);
        setDescription(description);
        setArtikul(artikul);
        setStatus(status);
        setAuctionId(auctionId);
    }

    /**
     * Create a detached, initialised LotRecord
     */
    public LotRecord(LotEntity value) {
        super(Lot.LOT_ENTITY);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setDescription(value.getDescription());
            setArtikul(value.getArtikul());
            setStatus(value.getStatus());
            setAuctionId(value.getAuctionId());
        }
    }
}
