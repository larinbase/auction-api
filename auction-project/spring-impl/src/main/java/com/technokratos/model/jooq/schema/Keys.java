/*
 * This file is generated by jOOQ.
 */
package com.technokratos.model.jooq.schema;


import com.technokratos.model.jooq.schema.tables.Account;
import com.technokratos.model.jooq.schema.tables.Auction;
import com.technokratos.model.jooq.schema.tables.Award;
import com.technokratos.model.jooq.schema.tables.Bet;
import com.technokratos.model.jooq.schema.tables.Lot;
import com.technokratos.model.jooq.schema.tables.records.AccountRecord;
import com.technokratos.model.jooq.schema.tables.records.AuctionRecord;
import com.technokratos.model.jooq.schema.tables.records.AwardRecord;
import com.technokratos.model.jooq.schema.tables.records.BetRecord;
import com.technokratos.model.jooq.schema.tables.records.LotRecord;

import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * public.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AccountRecord> ACCOUNT_PK = Internal.createUniqueKey(Account.ACCOUNT_ENTITY, DSL.name("account_pk"), new TableField[] { Account.ACCOUNT_ENTITY.ID }, true);
    public static final UniqueKey<AuctionRecord> AUCTION_PK = Internal.createUniqueKey(Auction.AUCTION_ENTITY, DSL.name("auction_pk"), new TableField[] { Auction.AUCTION_ENTITY.ID }, true);
    public static final UniqueKey<AwardRecord> AWARD_PK = Internal.createUniqueKey(Award.AWARD_ENTITY, DSL.name("award_pk"), new TableField[] { Award.AWARD_ENTITY.ID }, true);
    public static final UniqueKey<BetRecord> BET_PK = Internal.createUniqueKey(Bet.BET_ENTITY, DSL.name("bet_pk"), new TableField[] { Bet.BET_ENTITY.ID }, true);
    public static final UniqueKey<LotRecord> LOT_ARTIKUL_KEY = Internal.createUniqueKey(Lot.LOT_ENTITY, DSL.name("lot_artikul_key"), new TableField[] { Lot.LOT_ENTITY.ARTIKUL }, true);
    public static final UniqueKey<LotRecord> LOT_PK = Internal.createUniqueKey(Lot.LOT_ENTITY, DSL.name("lot_pk"), new TableField[] { Lot.LOT_ENTITY.ID }, true);
}
