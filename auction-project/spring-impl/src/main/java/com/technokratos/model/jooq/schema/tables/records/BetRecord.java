/*
 * This file is generated by jOOQ.
 */
package com.technokratos.model.jooq.schema.tables.records;


import com.technokratos.model.jooq.schema.tables.Bet;
import com.technokratos.model.jooq.schema.tables.pojos.BetEntity;

import java.math.BigDecimal;
import java.time.LocalDate;
import java.util.UUID;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Ставка
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class BetRecord extends UpdatableRecordImpl<BetRecord> implements Record5<UUID, BigDecimal, LocalDate, UUID, UUID> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.bet.id</code>.
     */
    public void setId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.bet.id</code>.
     */
    public UUID getId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>public.bet.amount</code>.
     */
    public void setAmount(BigDecimal value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.bet.amount</code>.
     */
    public BigDecimal getAmount() {
        return (BigDecimal) get(1);
    }

    /**
     * Setter for <code>public.bet.date_time</code>.
     */
    public void setDateTime(LocalDate value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.bet.date_time</code>.
     */
    public LocalDate getDateTime() {
        return (LocalDate) get(2);
    }

    /**
     * Setter for <code>public.bet.lot_id</code>.
     */
    public void setLotId(UUID value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.bet.lot_id</code>.
     */
    public UUID getLotId() {
        return (UUID) get(3);
    }

    /**
     * Setter for <code>public.bet.account_id</code>.
     */
    public void setAccountId(UUID value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.bet.account_id</code>.
     */
    public UUID getAccountId() {
        return (UUID) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<UUID, BigDecimal, LocalDate, UUID, UUID> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<UUID, BigDecimal, LocalDate, UUID, UUID> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Bet.BET_ENTITY.ID;
    }

    @Override
    public Field<BigDecimal> field2() {
        return Bet.BET_ENTITY.AMOUNT;
    }

    @Override
    public Field<LocalDate> field3() {
        return Bet.BET_ENTITY.DATE_TIME;
    }

    @Override
    public Field<UUID> field4() {
        return Bet.BET_ENTITY.LOT_ID;
    }

    @Override
    public Field<UUID> field5() {
        return Bet.BET_ENTITY.ACCOUNT_ID;
    }

    @Override
    public UUID component1() {
        return getId();
    }

    @Override
    public BigDecimal component2() {
        return getAmount();
    }

    @Override
    public LocalDate component3() {
        return getDateTime();
    }

    @Override
    public UUID component4() {
        return getLotId();
    }

    @Override
    public UUID component5() {
        return getAccountId();
    }

    @Override
    public UUID value1() {
        return getId();
    }

    @Override
    public BigDecimal value2() {
        return getAmount();
    }

    @Override
    public LocalDate value3() {
        return getDateTime();
    }

    @Override
    public UUID value4() {
        return getLotId();
    }

    @Override
    public UUID value5() {
        return getAccountId();
    }

    @Override
    public BetRecord value1(UUID value) {
        setId(value);
        return this;
    }

    @Override
    public BetRecord value2(BigDecimal value) {
        setAmount(value);
        return this;
    }

    @Override
    public BetRecord value3(LocalDate value) {
        setDateTime(value);
        return this;
    }

    @Override
    public BetRecord value4(UUID value) {
        setLotId(value);
        return this;
    }

    @Override
    public BetRecord value5(UUID value) {
        setAccountId(value);
        return this;
    }

    @Override
    public BetRecord values(UUID value1, BigDecimal value2, LocalDate value3, UUID value4, UUID value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached BetRecord
     */
    public BetRecord() {
        super(Bet.BET_ENTITY);
    }

    /**
     * Create a detached, initialised BetRecord
     */
    public BetRecord(UUID id, BigDecimal amount, LocalDate dateTime, UUID lotId, UUID accountId) {
        super(Bet.BET_ENTITY);

        setId(id);
        setAmount(amount);
        setDateTime(dateTime);
        setLotId(lotId);
        setAccountId(accountId);
    }

    /**
     * Create a detached, initialised BetRecord
     */
    public BetRecord(BetEntity value) {
        super(Bet.BET_ENTITY);

        if (value != null) {
            setId(value.getId());
            setAmount(value.getAmount());
            setDateTime(value.getDateTime());
            setLotId(value.getLotId());
            setAccountId(value.getAccountId());
        }
    }
}
